// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genomicsdb_export_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "genomicsdb_export_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ColumnRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColumnRangeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnRangeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowRangeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowRangeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExportConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExportConfiguration_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_genomicsdb_5fexport_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_genomicsdb_5fexport_5fconfig_2eproto() {
  protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "genomicsdb_export_config.proto");
  GOOGLE_CHECK(file != NULL);
  ColumnRange_descriptor_ = file->message_type(0);
  static const int ColumnRange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRange, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRange, high_),
  };
  ColumnRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColumnRange_descriptor_,
      ColumnRange::default_instance_,
      ColumnRange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRange, _has_bits_[0]),
      -1,
      -1,
      sizeof(ColumnRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRange, _internal_metadata_),
      -1);
  ColumnRangeList_descriptor_ = file->message_type(1);
  static const int ColumnRangeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRangeList, range_list_),
  };
  ColumnRangeList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColumnRangeList_descriptor_,
      ColumnRangeList::default_instance_,
      ColumnRangeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRangeList, _has_bits_[0]),
      -1,
      -1,
      sizeof(ColumnRangeList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnRangeList, _internal_metadata_),
      -1);
  RowRange_descriptor_ = file->message_type(2);
  static const int RowRange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRange, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRange, high_),
  };
  RowRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RowRange_descriptor_,
      RowRange::default_instance_,
      RowRange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRange, _has_bits_[0]),
      -1,
      -1,
      sizeof(RowRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRange, _internal_metadata_),
      -1);
  RowRangeList_descriptor_ = file->message_type(3);
  static const int RowRangeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRangeList, range_list_),
  };
  RowRangeList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RowRangeList_descriptor_,
      RowRangeList::default_instance_,
      RowRangeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRangeList, _has_bits_[0]),
      -1,
      -1,
      sizeof(RowRangeList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowRangeList, _internal_metadata_),
      -1);
  ExportConfiguration_descriptor_ = file->message_type(4);
  static const int ExportConfiguration_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, workspace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, reference_genome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, query_column_ranges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, query_row_ranges_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, vcf_header_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, vcf_output_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, vcf_output_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, vid_mapping_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, callset_mapping_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, max_diploid_alt_alleles_that_can_be_genotyped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, index_output_vcf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, produce_gt_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, produce_filter_field_),
  };
  ExportConfiguration_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExportConfiguration_descriptor_,
      ExportConfiguration::default_instance_,
      ExportConfiguration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, _has_bits_[0]),
      -1,
      -1,
      sizeof(ExportConfiguration),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExportConfiguration, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_genomicsdb_5fexport_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColumnRange_descriptor_, &ColumnRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColumnRangeList_descriptor_, &ColumnRangeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RowRange_descriptor_, &RowRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RowRangeList_descriptor_, &RowRangeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExportConfiguration_descriptor_, &ExportConfiguration::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_genomicsdb_5fexport_5fconfig_2eproto() {
  delete ColumnRange::default_instance_;
  delete ColumnRange_reflection_;
  delete ColumnRangeList::default_instance_;
  delete ColumnRangeList_reflection_;
  delete RowRange::default_instance_;
  delete RowRange_reflection_;
  delete RowRangeList::default_instance_;
  delete RowRangeList_reflection_;
  delete ExportConfiguration::default_instance_;
  delete ExportConfiguration_reflection_;
}

void protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036genomicsdb_export_config.proto\"(\n\013Colu"
    "mnRange\022\013\n\003low\030\001 \002(\003\022\014\n\004high\030\002 \002(\003\"3\n\017Co"
    "lumnRangeList\022 \n\nrange_list\030\001 \003(\0132\014.Colu"
    "mnRange\"%\n\010RowRange\022\013\n\003low\030\001 \002(\003\022\014\n\004high"
    "\030\002 \002(\003\"-\n\014RowRangeList\022\035\n\nrange_list\030\001 \003"
    "(\0132\t.RowRange\"\323\003\n\023ExportConfiguration\022\021\n"
    "\tworkspace\030\001 \002(\t\022\r\n\005array\030\002 \002(\t\022\030\n\020refer"
    "ence_genome\030\003 \002(\t\022-\n\023query_column_ranges"
    "\030\004 \003(\0132\020.ColumnRangeList\022\'\n\020query_row_ra"
    "nges\030\005 \003(\0132\r.RowRangeList\022\022\n\nattributes\030"
    "\006 \003(\t\022\033\n\023vcf_header_filename\030\007 \001(\t\022\033\n\023vc"
    "f_output_filename\030\010 \001(\t\022\031\n\021vcf_output_fo"
    "rmat\030\t \001(\t\022\030\n\020vid_mapping_file\030\n \001(\t\022\034\n\024"
    "callset_mapping_file\030\013 \001(\t\0225\n-max_diploi"
    "d_alt_alleles_that_can_be_genotyped\030\014 \001("
    "\r\022\030\n\020index_output_VCF\030\r \001(\010\022\030\n\020produce_G"
    "T_field\030\016 \001(\010\022\034\n\024produce_FILTER_field\030\017 "
    "\001(\010B5\n\024com.intel.genomicsdbB\035GenomicsDBE"
    "xportConfiguration", 738);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "genomicsdb_export_config.proto", &protobuf_RegisterTypes);
  ColumnRange::default_instance_ = new ColumnRange();
  ColumnRangeList::default_instance_ = new ColumnRangeList();
  RowRange::default_instance_ = new RowRange();
  RowRangeList::default_instance_ = new RowRangeList();
  ExportConfiguration::default_instance_ = new ExportConfiguration();
  ColumnRange::default_instance_->InitAsDefaultInstance();
  ColumnRangeList::default_instance_->InitAsDefaultInstance();
  RowRange::default_instance_->InitAsDefaultInstance();
  RowRangeList::default_instance_->InitAsDefaultInstance();
  ExportConfiguration::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_genomicsdb_5fexport_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_genomicsdb_5fexport_5fconfig_2eproto {
  StaticDescriptorInitializer_genomicsdb_5fexport_5fconfig_2eproto() {
    protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  }
} static_descriptor_initializer_genomicsdb_5fexport_5fconfig_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnRange::kLowFieldNumber;
const int ColumnRange::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnRange::ColumnRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColumnRange)
}

void ColumnRange::InitAsDefaultInstance() {
}

ColumnRange::ColumnRange(const ColumnRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ColumnRange)
}

void ColumnRange::SharedCtor() {
  _cached_size_ = 0;
  low_ = GOOGLE_LONGLONG(0);
  high_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ColumnRange::~ColumnRange() {
  // @@protoc_insertion_point(destructor:ColumnRange)
  SharedDtor();
}

void ColumnRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ColumnRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnRange_descriptor_;
}

const ColumnRange& ColumnRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  return *default_instance_;
}

ColumnRange* ColumnRange::default_instance_ = NULL;

ColumnRange* ColumnRange::New(::google::protobuf::Arena* arena) const {
  ColumnRange* n = new ColumnRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColumnRange::Clear() {
// @@protoc_insertion_point(message_clear_start:ColumnRange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ColumnRange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ColumnRange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(low_, high_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ColumnRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColumnRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 low = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &low_)));
          set_has_low();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_high;
        break;
      }

      // required int64 high = 2;
      case 2: {
        if (tag == 16) {
         parse_high:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &high_)));
          set_has_high();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColumnRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColumnRange)
  return false;
#undef DO_
}

void ColumnRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColumnRange)
  // required int64 low = 1;
  if (has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->low(), output);
  }

  // required int64 high = 2;
  if (has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->high(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ColumnRange)
}

::google::protobuf::uint8* ColumnRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ColumnRange)
  // required int64 low = 1;
  if (has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->low(), target);
  }

  // required int64 high = 2;
  if (has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->high(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColumnRange)
  return target;
}

int ColumnRange::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ColumnRange)
  int total_size = 0;

  if (has_low()) {
    // required int64 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());
  }

  if (has_high()) {
    // required int64 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());
  }

  return total_size;
}
int ColumnRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ColumnRange)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());

    // required int64 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColumnRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ColumnRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColumnRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColumnRange)
    MergeFrom(*source);
  }
}

void ColumnRange::MergeFrom(const ColumnRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColumnRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_low()) {
      set_low(from.low());
    }
    if (from.has_high()) {
      set_high(from.high());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ColumnRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColumnRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnRange::CopyFrom(const ColumnRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColumnRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnRange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ColumnRange::Swap(ColumnRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnRange::InternalSwap(ColumnRange* other) {
  std::swap(low_, other->low_);
  std::swap(high_, other->high_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColumnRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnRange_descriptor_;
  metadata.reflection = ColumnRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColumnRange

// required int64 low = 1;
bool ColumnRange::has_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ColumnRange::set_has_low() {
  _has_bits_[0] |= 0x00000001u;
}
void ColumnRange::clear_has_low() {
  _has_bits_[0] &= ~0x00000001u;
}
void ColumnRange::clear_low() {
  low_ = GOOGLE_LONGLONG(0);
  clear_has_low();
}
 ::google::protobuf::int64 ColumnRange::low() const {
  // @@protoc_insertion_point(field_get:ColumnRange.low)
  return low_;
}
 void ColumnRange::set_low(::google::protobuf::int64 value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:ColumnRange.low)
}

// required int64 high = 2;
bool ColumnRange::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ColumnRange::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
void ColumnRange::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
void ColumnRange::clear_high() {
  high_ = GOOGLE_LONGLONG(0);
  clear_has_high();
}
 ::google::protobuf::int64 ColumnRange::high() const {
  // @@protoc_insertion_point(field_get:ColumnRange.high)
  return high_;
}
 void ColumnRange::set_high(::google::protobuf::int64 value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:ColumnRange.high)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnRangeList::kRangeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnRangeList::ColumnRangeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColumnRangeList)
}

void ColumnRangeList::InitAsDefaultInstance() {
}

ColumnRangeList::ColumnRangeList(const ColumnRangeList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ColumnRangeList)
}

void ColumnRangeList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ColumnRangeList::~ColumnRangeList() {
  // @@protoc_insertion_point(destructor:ColumnRangeList)
  SharedDtor();
}

void ColumnRangeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ColumnRangeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnRangeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnRangeList_descriptor_;
}

const ColumnRangeList& ColumnRangeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  return *default_instance_;
}

ColumnRangeList* ColumnRangeList::default_instance_ = NULL;

ColumnRangeList* ColumnRangeList::New(::google::protobuf::Arena* arena) const {
  ColumnRangeList* n = new ColumnRangeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColumnRangeList::Clear() {
// @@protoc_insertion_point(message_clear_start:ColumnRangeList)
  range_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ColumnRangeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColumnRangeList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ColumnRange range_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_range_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_range_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_range_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColumnRangeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColumnRangeList)
  return false;
#undef DO_
}

void ColumnRangeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColumnRangeList)
  // repeated .ColumnRange range_list = 1;
  for (unsigned int i = 0, n = this->range_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->range_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ColumnRangeList)
}

::google::protobuf::uint8* ColumnRangeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ColumnRangeList)
  // repeated .ColumnRange range_list = 1;
  for (unsigned int i = 0, n = this->range_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->range_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColumnRangeList)
  return target;
}

int ColumnRangeList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ColumnRangeList)
  int total_size = 0;

  // repeated .ColumnRange range_list = 1;
  total_size += 1 * this->range_list_size();
  for (int i = 0; i < this->range_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->range_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnRangeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColumnRangeList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ColumnRangeList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnRangeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColumnRangeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColumnRangeList)
    MergeFrom(*source);
  }
}

void ColumnRangeList::MergeFrom(const ColumnRangeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColumnRangeList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  range_list_.MergeFrom(from.range_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ColumnRangeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColumnRangeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnRangeList::CopyFrom(const ColumnRangeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColumnRangeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnRangeList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->range_list())) return false;
  return true;
}

void ColumnRangeList::Swap(ColumnRangeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnRangeList::InternalSwap(ColumnRangeList* other) {
  range_list_.UnsafeArenaSwap(&other->range_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColumnRangeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnRangeList_descriptor_;
  metadata.reflection = ColumnRangeList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColumnRangeList

// repeated .ColumnRange range_list = 1;
int ColumnRangeList::range_list_size() const {
  return range_list_.size();
}
void ColumnRangeList::clear_range_list() {
  range_list_.Clear();
}
const ::ColumnRange& ColumnRangeList::range_list(int index) const {
  // @@protoc_insertion_point(field_get:ColumnRangeList.range_list)
  return range_list_.Get(index);
}
::ColumnRange* ColumnRangeList::mutable_range_list(int index) {
  // @@protoc_insertion_point(field_mutable:ColumnRangeList.range_list)
  return range_list_.Mutable(index);
}
::ColumnRange* ColumnRangeList::add_range_list() {
  // @@protoc_insertion_point(field_add:ColumnRangeList.range_list)
  return range_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::ColumnRange >*
ColumnRangeList::mutable_range_list() {
  // @@protoc_insertion_point(field_mutable_list:ColumnRangeList.range_list)
  return &range_list_;
}
const ::google::protobuf::RepeatedPtrField< ::ColumnRange >&
ColumnRangeList::range_list() const {
  // @@protoc_insertion_point(field_list:ColumnRangeList.range_list)
  return range_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowRange::kLowFieldNumber;
const int RowRange::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowRange::RowRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RowRange)
}

void RowRange::InitAsDefaultInstance() {
}

RowRange::RowRange(const RowRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RowRange)
}

void RowRange::SharedCtor() {
  _cached_size_ = 0;
  low_ = GOOGLE_LONGLONG(0);
  high_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RowRange::~RowRange() {
  // @@protoc_insertion_point(destructor:RowRange)
  SharedDtor();
}

void RowRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RowRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowRange_descriptor_;
}

const RowRange& RowRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  return *default_instance_;
}

RowRange* RowRange::default_instance_ = NULL;

RowRange* RowRange::New(::google::protobuf::Arena* arena) const {
  RowRange* n = new RowRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowRange::Clear() {
// @@protoc_insertion_point(message_clear_start:RowRange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RowRange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RowRange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(low_, high_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RowRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RowRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 low = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &low_)));
          set_has_low();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_high;
        break;
      }

      // required int64 high = 2;
      case 2: {
        if (tag == 16) {
         parse_high:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &high_)));
          set_has_high();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RowRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RowRange)
  return false;
#undef DO_
}

void RowRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RowRange)
  // required int64 low = 1;
  if (has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->low(), output);
  }

  // required int64 high = 2;
  if (has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->high(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RowRange)
}

::google::protobuf::uint8* RowRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RowRange)
  // required int64 low = 1;
  if (has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->low(), target);
  }

  // required int64 high = 2;
  if (has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->high(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RowRange)
  return target;
}

int RowRange::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RowRange)
  int total_size = 0;

  if (has_low()) {
    // required int64 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());
  }

  if (has_high()) {
    // required int64 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());
  }

  return total_size;
}
int RowRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RowRange)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());

    // required int64 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RowRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RowRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RowRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RowRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RowRange)
    MergeFrom(*source);
  }
}

void RowRange::MergeFrom(const RowRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RowRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_low()) {
      set_low(from.low());
    }
    if (from.has_high()) {
      set_high(from.high());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RowRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RowRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowRange::CopyFrom(const RowRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RowRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowRange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RowRange::Swap(RowRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowRange::InternalSwap(RowRange* other) {
  std::swap(low_, other->low_);
  std::swap(high_, other->high_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowRange_descriptor_;
  metadata.reflection = RowRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RowRange

// required int64 low = 1;
bool RowRange::has_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RowRange::set_has_low() {
  _has_bits_[0] |= 0x00000001u;
}
void RowRange::clear_has_low() {
  _has_bits_[0] &= ~0x00000001u;
}
void RowRange::clear_low() {
  low_ = GOOGLE_LONGLONG(0);
  clear_has_low();
}
 ::google::protobuf::int64 RowRange::low() const {
  // @@protoc_insertion_point(field_get:RowRange.low)
  return low_;
}
 void RowRange::set_low(::google::protobuf::int64 value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:RowRange.low)
}

// required int64 high = 2;
bool RowRange::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RowRange::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
void RowRange::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
void RowRange::clear_high() {
  high_ = GOOGLE_LONGLONG(0);
  clear_has_high();
}
 ::google::protobuf::int64 RowRange::high() const {
  // @@protoc_insertion_point(field_get:RowRange.high)
  return high_;
}
 void RowRange::set_high(::google::protobuf::int64 value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:RowRange.high)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowRangeList::kRangeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowRangeList::RowRangeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RowRangeList)
}

void RowRangeList::InitAsDefaultInstance() {
}

RowRangeList::RowRangeList(const RowRangeList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RowRangeList)
}

void RowRangeList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RowRangeList::~RowRangeList() {
  // @@protoc_insertion_point(destructor:RowRangeList)
  SharedDtor();
}

void RowRangeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RowRangeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowRangeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowRangeList_descriptor_;
}

const RowRangeList& RowRangeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  return *default_instance_;
}

RowRangeList* RowRangeList::default_instance_ = NULL;

RowRangeList* RowRangeList::New(::google::protobuf::Arena* arena) const {
  RowRangeList* n = new RowRangeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowRangeList::Clear() {
// @@protoc_insertion_point(message_clear_start:RowRangeList)
  range_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RowRangeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RowRangeList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RowRange range_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_range_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_range_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_range_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RowRangeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RowRangeList)
  return false;
#undef DO_
}

void RowRangeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RowRangeList)
  // repeated .RowRange range_list = 1;
  for (unsigned int i = 0, n = this->range_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->range_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RowRangeList)
}

::google::protobuf::uint8* RowRangeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RowRangeList)
  // repeated .RowRange range_list = 1;
  for (unsigned int i = 0, n = this->range_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->range_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RowRangeList)
  return target;
}

int RowRangeList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RowRangeList)
  int total_size = 0;

  // repeated .RowRange range_list = 1;
  total_size += 1 * this->range_list_size();
  for (int i = 0; i < this->range_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->range_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowRangeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RowRangeList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RowRangeList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RowRangeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RowRangeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RowRangeList)
    MergeFrom(*source);
  }
}

void RowRangeList::MergeFrom(const RowRangeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RowRangeList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  range_list_.MergeFrom(from.range_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RowRangeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RowRangeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowRangeList::CopyFrom(const RowRangeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RowRangeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RowRangeList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->range_list())) return false;
  return true;
}

void RowRangeList::Swap(RowRangeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowRangeList::InternalSwap(RowRangeList* other) {
  range_list_.UnsafeArenaSwap(&other->range_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowRangeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowRangeList_descriptor_;
  metadata.reflection = RowRangeList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RowRangeList

// repeated .RowRange range_list = 1;
int RowRangeList::range_list_size() const {
  return range_list_.size();
}
void RowRangeList::clear_range_list() {
  range_list_.Clear();
}
const ::RowRange& RowRangeList::range_list(int index) const {
  // @@protoc_insertion_point(field_get:RowRangeList.range_list)
  return range_list_.Get(index);
}
::RowRange* RowRangeList::mutable_range_list(int index) {
  // @@protoc_insertion_point(field_mutable:RowRangeList.range_list)
  return range_list_.Mutable(index);
}
::RowRange* RowRangeList::add_range_list() {
  // @@protoc_insertion_point(field_add:RowRangeList.range_list)
  return range_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::RowRange >*
RowRangeList::mutable_range_list() {
  // @@protoc_insertion_point(field_mutable_list:RowRangeList.range_list)
  return &range_list_;
}
const ::google::protobuf::RepeatedPtrField< ::RowRange >&
RowRangeList::range_list() const {
  // @@protoc_insertion_point(field_list:RowRangeList.range_list)
  return range_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportConfiguration::kWorkspaceFieldNumber;
const int ExportConfiguration::kArrayFieldNumber;
const int ExportConfiguration::kReferenceGenomeFieldNumber;
const int ExportConfiguration::kQueryColumnRangesFieldNumber;
const int ExportConfiguration::kQueryRowRangesFieldNumber;
const int ExportConfiguration::kAttributesFieldNumber;
const int ExportConfiguration::kVcfHeaderFilenameFieldNumber;
const int ExportConfiguration::kVcfOutputFilenameFieldNumber;
const int ExportConfiguration::kVcfOutputFormatFieldNumber;
const int ExportConfiguration::kVidMappingFileFieldNumber;
const int ExportConfiguration::kCallsetMappingFileFieldNumber;
const int ExportConfiguration::kMaxDiploidAltAllelesThatCanBeGenotypedFieldNumber;
const int ExportConfiguration::kIndexOutputVCFFieldNumber;
const int ExportConfiguration::kProduceGTFieldFieldNumber;
const int ExportConfiguration::kProduceFILTERFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportConfiguration::ExportConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExportConfiguration)
}

void ExportConfiguration::InitAsDefaultInstance() {
}

ExportConfiguration::ExportConfiguration(const ExportConfiguration& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExportConfiguration)
}

void ExportConfiguration::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  workspace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_genome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_header_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_output_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_output_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vid_mapping_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callset_mapping_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_diploid_alt_alleles_that_can_be_genotyped_ = 0u;
  index_output_vcf_ = false;
  produce_gt_field_ = false;
  produce_filter_field_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExportConfiguration::~ExportConfiguration() {
  // @@protoc_insertion_point(destructor:ExportConfiguration)
  SharedDtor();
}

void ExportConfiguration::SharedDtor() {
  workspace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_genome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_header_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_output_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcf_output_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vid_mapping_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callset_mapping_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExportConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExportConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExportConfiguration_descriptor_;
}

const ExportConfiguration& ExportConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_genomicsdb_5fexport_5fconfig_2eproto();
  return *default_instance_;
}

ExportConfiguration* ExportConfiguration::default_instance_ = NULL;

ExportConfiguration* ExportConfiguration::New(::google::protobuf::Arena* arena) const {
  ExportConfiguration* n = new ExportConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExportConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:ExportConfiguration)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ExportConfiguration, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExportConfiguration*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 199u) {
    if (has_workspace()) {
      workspace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_array()) {
      array_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reference_genome()) {
      reference_genome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_vcf_header_filename()) {
      vcf_header_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_vcf_output_filename()) {
      vcf_output_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ZR_(max_diploid_alt_alleles_that_can_be_genotyped_, produce_filter_field_);
    if (has_vcf_output_format()) {
      vcf_output_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_vid_mapping_file()) {
      vid_mapping_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_callset_mapping_file()) {
      callset_mapping_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  query_column_ranges_.Clear();
  query_row_ranges_.Clear();
  attributes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ExportConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExportConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string workspace = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workspace()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->workspace().data(), this->workspace().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.workspace");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_array;
        break;
      }

      // required string array = 2;
      case 2: {
        if (tag == 18) {
         parse_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_array()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->array().data(), this->array().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.array");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reference_genome;
        break;
      }

      // required string reference_genome = 3;
      case 3: {
        if (tag == 26) {
         parse_reference_genome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference_genome()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reference_genome().data(), this->reference_genome().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.reference_genome");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_query_column_ranges;
        break;
      }

      // repeated .ColumnRangeList query_column_ranges = 4;
      case 4: {
        if (tag == 34) {
         parse_query_column_ranges:
          DO_(input->IncrementRecursionDepth());
         parse_loop_query_column_ranges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_query_column_ranges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_query_column_ranges;
        if (input->ExpectTag(42)) goto parse_loop_query_row_ranges;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .RowRangeList query_row_ranges = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_query_row_ranges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_query_row_ranges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_query_row_ranges;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_attributes;
        break;
      }

      // repeated string attributes = 6;
      case 6: {
        if (tag == 50) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attributes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attributes(this->attributes_size() - 1).data(),
            this->attributes(this->attributes_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.attributes");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attributes;
        if (input->ExpectTag(58)) goto parse_vcf_header_filename;
        break;
      }

      // optional string vcf_header_filename = 7;
      case 7: {
        if (tag == 58) {
         parse_vcf_header_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vcf_header_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vcf_header_filename().data(), this->vcf_header_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.vcf_header_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_vcf_output_filename;
        break;
      }

      // optional string vcf_output_filename = 8;
      case 8: {
        if (tag == 66) {
         parse_vcf_output_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vcf_output_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vcf_output_filename().data(), this->vcf_output_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.vcf_output_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_vcf_output_format;
        break;
      }

      // optional string vcf_output_format = 9;
      case 9: {
        if (tag == 74) {
         parse_vcf_output_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vcf_output_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vcf_output_format().data(), this->vcf_output_format().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.vcf_output_format");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_vid_mapping_file;
        break;
      }

      // optional string vid_mapping_file = 10;
      case 10: {
        if (tag == 82) {
         parse_vid_mapping_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vid_mapping_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vid_mapping_file().data(), this->vid_mapping_file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.vid_mapping_file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_callset_mapping_file;
        break;
      }

      // optional string callset_mapping_file = 11;
      case 11: {
        if (tag == 90) {
         parse_callset_mapping_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callset_mapping_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->callset_mapping_file().data(), this->callset_mapping_file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ExportConfiguration.callset_mapping_file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_max_diploid_alt_alleles_that_can_be_genotyped;
        break;
      }

      // optional uint32 max_diploid_alt_alleles_that_can_be_genotyped = 12;
      case 12: {
        if (tag == 96) {
         parse_max_diploid_alt_alleles_that_can_be_genotyped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_diploid_alt_alleles_that_can_be_genotyped_)));
          set_has_max_diploid_alt_alleles_that_can_be_genotyped();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_index_output_VCF;
        break;
      }

      // optional bool index_output_VCF = 13;
      case 13: {
        if (tag == 104) {
         parse_index_output_VCF:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &index_output_vcf_)));
          set_has_index_output_vcf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_produce_GT_field;
        break;
      }

      // optional bool produce_GT_field = 14;
      case 14: {
        if (tag == 112) {
         parse_produce_GT_field:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &produce_gt_field_)));
          set_has_produce_gt_field();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_produce_FILTER_field;
        break;
      }

      // optional bool produce_FILTER_field = 15;
      case 15: {
        if (tag == 120) {
         parse_produce_FILTER_field:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &produce_filter_field_)));
          set_has_produce_filter_field();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExportConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExportConfiguration)
  return false;
#undef DO_
}

void ExportConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExportConfiguration)
  // required string workspace = 1;
  if (has_workspace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workspace().data(), this->workspace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.workspace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->workspace(), output);
  }

  // required string array = 2;
  if (has_array()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->array().data(), this->array().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.array");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->array(), output);
  }

  // required string reference_genome = 3;
  if (has_reference_genome()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference_genome().data(), this->reference_genome().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.reference_genome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reference_genome(), output);
  }

  // repeated .ColumnRangeList query_column_ranges = 4;
  for (unsigned int i = 0, n = this->query_column_ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->query_column_ranges(i), output);
  }

  // repeated .RowRangeList query_row_ranges = 5;
  for (unsigned int i = 0, n = this->query_row_ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->query_row_ranges(i), output);
  }

  // repeated string attributes = 6;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes(i).data(), this->attributes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.attributes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attributes(i), output);
  }

  // optional string vcf_header_filename = 7;
  if (has_vcf_header_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_header_filename().data(), this->vcf_header_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_header_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vcf_header_filename(), output);
  }

  // optional string vcf_output_filename = 8;
  if (has_vcf_output_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_output_filename().data(), this->vcf_output_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_output_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->vcf_output_filename(), output);
  }

  // optional string vcf_output_format = 9;
  if (has_vcf_output_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_output_format().data(), this->vcf_output_format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_output_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->vcf_output_format(), output);
  }

  // optional string vid_mapping_file = 10;
  if (has_vid_mapping_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid_mapping_file().data(), this->vid_mapping_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vid_mapping_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->vid_mapping_file(), output);
  }

  // optional string callset_mapping_file = 11;
  if (has_callset_mapping_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->callset_mapping_file().data(), this->callset_mapping_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.callset_mapping_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->callset_mapping_file(), output);
  }

  // optional uint32 max_diploid_alt_alleles_that_can_be_genotyped = 12;
  if (has_max_diploid_alt_alleles_that_can_be_genotyped()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->max_diploid_alt_alleles_that_can_be_genotyped(), output);
  }

  // optional bool index_output_VCF = 13;
  if (has_index_output_vcf()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->index_output_vcf(), output);
  }

  // optional bool produce_GT_field = 14;
  if (has_produce_gt_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->produce_gt_field(), output);
  }

  // optional bool produce_FILTER_field = 15;
  if (has_produce_filter_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->produce_filter_field(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExportConfiguration)
}

::google::protobuf::uint8* ExportConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExportConfiguration)
  // required string workspace = 1;
  if (has_workspace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workspace().data(), this->workspace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.workspace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->workspace(), target);
  }

  // required string array = 2;
  if (has_array()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->array().data(), this->array().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.array");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->array(), target);
  }

  // required string reference_genome = 3;
  if (has_reference_genome()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference_genome().data(), this->reference_genome().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.reference_genome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reference_genome(), target);
  }

  // repeated .ColumnRangeList query_column_ranges = 4;
  for (unsigned int i = 0, n = this->query_column_ranges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->query_column_ranges(i), false, target);
  }

  // repeated .RowRangeList query_row_ranges = 5;
  for (unsigned int i = 0, n = this->query_row_ranges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->query_row_ranges(i), false, target);
  }

  // repeated string attributes = 6;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes(i).data(), this->attributes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.attributes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attributes(i), target);
  }

  // optional string vcf_header_filename = 7;
  if (has_vcf_header_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_header_filename().data(), this->vcf_header_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_header_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vcf_header_filename(), target);
  }

  // optional string vcf_output_filename = 8;
  if (has_vcf_output_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_output_filename().data(), this->vcf_output_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_output_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->vcf_output_filename(), target);
  }

  // optional string vcf_output_format = 9;
  if (has_vcf_output_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vcf_output_format().data(), this->vcf_output_format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vcf_output_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->vcf_output_format(), target);
  }

  // optional string vid_mapping_file = 10;
  if (has_vid_mapping_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vid_mapping_file().data(), this->vid_mapping_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.vid_mapping_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->vid_mapping_file(), target);
  }

  // optional string callset_mapping_file = 11;
  if (has_callset_mapping_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->callset_mapping_file().data(), this->callset_mapping_file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ExportConfiguration.callset_mapping_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->callset_mapping_file(), target);
  }

  // optional uint32 max_diploid_alt_alleles_that_can_be_genotyped = 12;
  if (has_max_diploid_alt_alleles_that_can_be_genotyped()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->max_diploid_alt_alleles_that_can_be_genotyped(), target);
  }

  // optional bool index_output_VCF = 13;
  if (has_index_output_vcf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->index_output_vcf(), target);
  }

  // optional bool produce_GT_field = 14;
  if (has_produce_gt_field()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->produce_gt_field(), target);
  }

  // optional bool produce_FILTER_field = 15;
  if (has_produce_filter_field()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->produce_filter_field(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExportConfiguration)
  return target;
}

int ExportConfiguration::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ExportConfiguration)
  int total_size = 0;

  if (has_workspace()) {
    // required string workspace = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workspace());
  }

  if (has_array()) {
    // required string array = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->array());
  }

  if (has_reference_genome()) {
    // required string reference_genome = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference_genome());
  }

  return total_size;
}
int ExportConfiguration::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ExportConfiguration)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string workspace = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workspace());

    // required string array = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->array());

    // required string reference_genome = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference_genome());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[6 / 32] & 192u) {
    // optional string vcf_header_filename = 7;
    if (has_vcf_header_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vcf_header_filename());
    }

    // optional string vcf_output_filename = 8;
    if (has_vcf_output_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vcf_output_filename());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional string vcf_output_format = 9;
    if (has_vcf_output_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vcf_output_format());
    }

    // optional string vid_mapping_file = 10;
    if (has_vid_mapping_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vid_mapping_file());
    }

    // optional string callset_mapping_file = 11;
    if (has_callset_mapping_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->callset_mapping_file());
    }

    // optional uint32 max_diploid_alt_alleles_that_can_be_genotyped = 12;
    if (has_max_diploid_alt_alleles_that_can_be_genotyped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_diploid_alt_alleles_that_can_be_genotyped());
    }

    // optional bool index_output_VCF = 13;
    if (has_index_output_vcf()) {
      total_size += 1 + 1;
    }

    // optional bool produce_GT_field = 14;
    if (has_produce_gt_field()) {
      total_size += 1 + 1;
    }

    // optional bool produce_FILTER_field = 15;
    if (has_produce_filter_field()) {
      total_size += 1 + 1;
    }

  }
  // repeated .ColumnRangeList query_column_ranges = 4;
  total_size += 1 * this->query_column_ranges_size();
  for (int i = 0; i < this->query_column_ranges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->query_column_ranges(i));
  }

  // repeated .RowRangeList query_row_ranges = 5;
  total_size += 1 * this->query_row_ranges_size();
  for (int i = 0; i < this->query_row_ranges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->query_row_ranges(i));
  }

  // repeated string attributes = 6;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attributes(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExportConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExportConfiguration)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExportConfiguration* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExportConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExportConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExportConfiguration)
    MergeFrom(*source);
  }
}

void ExportConfiguration::MergeFrom(const ExportConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExportConfiguration)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  query_column_ranges_.MergeFrom(from.query_column_ranges_);
  query_row_ranges_.MergeFrom(from.query_row_ranges_);
  attributes_.MergeFrom(from.attributes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_workspace()) {
      set_has_workspace();
      workspace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workspace_);
    }
    if (from.has_array()) {
      set_has_array();
      array_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array_);
    }
    if (from.has_reference_genome()) {
      set_has_reference_genome();
      reference_genome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_genome_);
    }
    if (from.has_vcf_header_filename()) {
      set_has_vcf_header_filename();
      vcf_header_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vcf_header_filename_);
    }
    if (from.has_vcf_output_filename()) {
      set_has_vcf_output_filename();
      vcf_output_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vcf_output_filename_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vcf_output_format()) {
      set_has_vcf_output_format();
      vcf_output_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vcf_output_format_);
    }
    if (from.has_vid_mapping_file()) {
      set_has_vid_mapping_file();
      vid_mapping_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vid_mapping_file_);
    }
    if (from.has_callset_mapping_file()) {
      set_has_callset_mapping_file();
      callset_mapping_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callset_mapping_file_);
    }
    if (from.has_max_diploid_alt_alleles_that_can_be_genotyped()) {
      set_max_diploid_alt_alleles_that_can_be_genotyped(from.max_diploid_alt_alleles_that_can_be_genotyped());
    }
    if (from.has_index_output_vcf()) {
      set_index_output_vcf(from.index_output_vcf());
    }
    if (from.has_produce_gt_field()) {
      set_produce_gt_field(from.produce_gt_field());
    }
    if (from.has_produce_filter_field()) {
      set_produce_filter_field(from.produce_filter_field());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ExportConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExportConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportConfiguration::CopyFrom(const ExportConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExportConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->query_column_ranges())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->query_row_ranges())) return false;
  return true;
}

void ExportConfiguration::Swap(ExportConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportConfiguration::InternalSwap(ExportConfiguration* other) {
  workspace_.Swap(&other->workspace_);
  array_.Swap(&other->array_);
  reference_genome_.Swap(&other->reference_genome_);
  query_column_ranges_.UnsafeArenaSwap(&other->query_column_ranges_);
  query_row_ranges_.UnsafeArenaSwap(&other->query_row_ranges_);
  attributes_.UnsafeArenaSwap(&other->attributes_);
  vcf_header_filename_.Swap(&other->vcf_header_filename_);
  vcf_output_filename_.Swap(&other->vcf_output_filename_);
  vcf_output_format_.Swap(&other->vcf_output_format_);
  vid_mapping_file_.Swap(&other->vid_mapping_file_);
  callset_mapping_file_.Swap(&other->callset_mapping_file_);
  std::swap(max_diploid_alt_alleles_that_can_be_genotyped_, other->max_diploid_alt_alleles_that_can_be_genotyped_);
  std::swap(index_output_vcf_, other->index_output_vcf_);
  std::swap(produce_gt_field_, other->produce_gt_field_);
  std::swap(produce_filter_field_, other->produce_filter_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExportConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExportConfiguration_descriptor_;
  metadata.reflection = ExportConfiguration_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExportConfiguration

// required string workspace = 1;
bool ExportConfiguration::has_workspace() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExportConfiguration::set_has_workspace() {
  _has_bits_[0] |= 0x00000001u;
}
void ExportConfiguration::clear_has_workspace() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExportConfiguration::clear_workspace() {
  workspace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_workspace();
}
 const ::std::string& ExportConfiguration::workspace() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.workspace)
  return workspace_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_workspace(const ::std::string& value) {
  set_has_workspace();
  workspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.workspace)
}
 void ExportConfiguration::set_workspace(const char* value) {
  set_has_workspace();
  workspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.workspace)
}
 void ExportConfiguration::set_workspace(const char* value, size_t size) {
  set_has_workspace();
  workspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.workspace)
}
 ::std::string* ExportConfiguration::mutable_workspace() {
  set_has_workspace();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.workspace)
  return workspace_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_workspace() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.workspace)
  clear_has_workspace();
  return workspace_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_workspace(::std::string* workspace) {
  if (workspace != NULL) {
    set_has_workspace();
  } else {
    clear_has_workspace();
  }
  workspace_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workspace);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.workspace)
}

// required string array = 2;
bool ExportConfiguration::has_array() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExportConfiguration::set_has_array() {
  _has_bits_[0] |= 0x00000002u;
}
void ExportConfiguration::clear_has_array() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExportConfiguration::clear_array() {
  array_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_array();
}
 const ::std::string& ExportConfiguration::array() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.array)
  return array_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_array(const ::std::string& value) {
  set_has_array();
  array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.array)
}
 void ExportConfiguration::set_array(const char* value) {
  set_has_array();
  array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.array)
}
 void ExportConfiguration::set_array(const char* value, size_t size) {
  set_has_array();
  array_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.array)
}
 ::std::string* ExportConfiguration::mutable_array() {
  set_has_array();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.array)
  return array_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_array() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.array)
  clear_has_array();
  return array_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_array(::std::string* array) {
  if (array != NULL) {
    set_has_array();
  } else {
    clear_has_array();
  }
  array_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), array);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.array)
}

// required string reference_genome = 3;
bool ExportConfiguration::has_reference_genome() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExportConfiguration::set_has_reference_genome() {
  _has_bits_[0] |= 0x00000004u;
}
void ExportConfiguration::clear_has_reference_genome() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExportConfiguration::clear_reference_genome() {
  reference_genome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reference_genome();
}
 const ::std::string& ExportConfiguration::reference_genome() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.reference_genome)
  return reference_genome_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_reference_genome(const ::std::string& value) {
  set_has_reference_genome();
  reference_genome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.reference_genome)
}
 void ExportConfiguration::set_reference_genome(const char* value) {
  set_has_reference_genome();
  reference_genome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.reference_genome)
}
 void ExportConfiguration::set_reference_genome(const char* value, size_t size) {
  set_has_reference_genome();
  reference_genome_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.reference_genome)
}
 ::std::string* ExportConfiguration::mutable_reference_genome() {
  set_has_reference_genome();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.reference_genome)
  return reference_genome_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_reference_genome() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.reference_genome)
  clear_has_reference_genome();
  return reference_genome_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_reference_genome(::std::string* reference_genome) {
  if (reference_genome != NULL) {
    set_has_reference_genome();
  } else {
    clear_has_reference_genome();
  }
  reference_genome_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_genome);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.reference_genome)
}

// repeated .ColumnRangeList query_column_ranges = 4;
int ExportConfiguration::query_column_ranges_size() const {
  return query_column_ranges_.size();
}
void ExportConfiguration::clear_query_column_ranges() {
  query_column_ranges_.Clear();
}
const ::ColumnRangeList& ExportConfiguration::query_column_ranges(int index) const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.query_column_ranges)
  return query_column_ranges_.Get(index);
}
::ColumnRangeList* ExportConfiguration::mutable_query_column_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.query_column_ranges)
  return query_column_ranges_.Mutable(index);
}
::ColumnRangeList* ExportConfiguration::add_query_column_ranges() {
  // @@protoc_insertion_point(field_add:ExportConfiguration.query_column_ranges)
  return query_column_ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::ColumnRangeList >*
ExportConfiguration::mutable_query_column_ranges() {
  // @@protoc_insertion_point(field_mutable_list:ExportConfiguration.query_column_ranges)
  return &query_column_ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::ColumnRangeList >&
ExportConfiguration::query_column_ranges() const {
  // @@protoc_insertion_point(field_list:ExportConfiguration.query_column_ranges)
  return query_column_ranges_;
}

// repeated .RowRangeList query_row_ranges = 5;
int ExportConfiguration::query_row_ranges_size() const {
  return query_row_ranges_.size();
}
void ExportConfiguration::clear_query_row_ranges() {
  query_row_ranges_.Clear();
}
const ::RowRangeList& ExportConfiguration::query_row_ranges(int index) const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.query_row_ranges)
  return query_row_ranges_.Get(index);
}
::RowRangeList* ExportConfiguration::mutable_query_row_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.query_row_ranges)
  return query_row_ranges_.Mutable(index);
}
::RowRangeList* ExportConfiguration::add_query_row_ranges() {
  // @@protoc_insertion_point(field_add:ExportConfiguration.query_row_ranges)
  return query_row_ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::RowRangeList >*
ExportConfiguration::mutable_query_row_ranges() {
  // @@protoc_insertion_point(field_mutable_list:ExportConfiguration.query_row_ranges)
  return &query_row_ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::RowRangeList >&
ExportConfiguration::query_row_ranges() const {
  // @@protoc_insertion_point(field_list:ExportConfiguration.query_row_ranges)
  return query_row_ranges_;
}

// repeated string attributes = 6;
int ExportConfiguration::attributes_size() const {
  return attributes_.size();
}
void ExportConfiguration::clear_attributes() {
  attributes_.Clear();
}
 const ::std::string& ExportConfiguration::attributes(int index) const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.attributes)
  return attributes_.Get(index);
}
 ::std::string* ExportConfiguration::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.attributes)
  return attributes_.Mutable(index);
}
 void ExportConfiguration::set_attributes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ExportConfiguration.attributes)
  attributes_.Mutable(index)->assign(value);
}
 void ExportConfiguration::set_attributes(int index, const char* value) {
  attributes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.attributes)
}
 void ExportConfiguration::set_attributes(int index, const char* value, size_t size) {
  attributes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.attributes)
}
 ::std::string* ExportConfiguration::add_attributes() {
  // @@protoc_insertion_point(field_add_mutable:ExportConfiguration.attributes)
  return attributes_.Add();
}
 void ExportConfiguration::add_attributes(const ::std::string& value) {
  attributes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ExportConfiguration.attributes)
}
 void ExportConfiguration::add_attributes(const char* value) {
  attributes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ExportConfiguration.attributes)
}
 void ExportConfiguration::add_attributes(const char* value, size_t size) {
  attributes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ExportConfiguration.attributes)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExportConfiguration::attributes() const {
  // @@protoc_insertion_point(field_list:ExportConfiguration.attributes)
  return attributes_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ExportConfiguration::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:ExportConfiguration.attributes)
  return &attributes_;
}

// optional string vcf_header_filename = 7;
bool ExportConfiguration::has_vcf_header_filename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ExportConfiguration::set_has_vcf_header_filename() {
  _has_bits_[0] |= 0x00000040u;
}
void ExportConfiguration::clear_has_vcf_header_filename() {
  _has_bits_[0] &= ~0x00000040u;
}
void ExportConfiguration::clear_vcf_header_filename() {
  vcf_header_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vcf_header_filename();
}
 const ::std::string& ExportConfiguration::vcf_header_filename() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.vcf_header_filename)
  return vcf_header_filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_vcf_header_filename(const ::std::string& value) {
  set_has_vcf_header_filename();
  vcf_header_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.vcf_header_filename)
}
 void ExportConfiguration::set_vcf_header_filename(const char* value) {
  set_has_vcf_header_filename();
  vcf_header_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.vcf_header_filename)
}
 void ExportConfiguration::set_vcf_header_filename(const char* value, size_t size) {
  set_has_vcf_header_filename();
  vcf_header_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.vcf_header_filename)
}
 ::std::string* ExportConfiguration::mutable_vcf_header_filename() {
  set_has_vcf_header_filename();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.vcf_header_filename)
  return vcf_header_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_vcf_header_filename() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.vcf_header_filename)
  clear_has_vcf_header_filename();
  return vcf_header_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_vcf_header_filename(::std::string* vcf_header_filename) {
  if (vcf_header_filename != NULL) {
    set_has_vcf_header_filename();
  } else {
    clear_has_vcf_header_filename();
  }
  vcf_header_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vcf_header_filename);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.vcf_header_filename)
}

// optional string vcf_output_filename = 8;
bool ExportConfiguration::has_vcf_output_filename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ExportConfiguration::set_has_vcf_output_filename() {
  _has_bits_[0] |= 0x00000080u;
}
void ExportConfiguration::clear_has_vcf_output_filename() {
  _has_bits_[0] &= ~0x00000080u;
}
void ExportConfiguration::clear_vcf_output_filename() {
  vcf_output_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vcf_output_filename();
}
 const ::std::string& ExportConfiguration::vcf_output_filename() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.vcf_output_filename)
  return vcf_output_filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_vcf_output_filename(const ::std::string& value) {
  set_has_vcf_output_filename();
  vcf_output_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.vcf_output_filename)
}
 void ExportConfiguration::set_vcf_output_filename(const char* value) {
  set_has_vcf_output_filename();
  vcf_output_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.vcf_output_filename)
}
 void ExportConfiguration::set_vcf_output_filename(const char* value, size_t size) {
  set_has_vcf_output_filename();
  vcf_output_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.vcf_output_filename)
}
 ::std::string* ExportConfiguration::mutable_vcf_output_filename() {
  set_has_vcf_output_filename();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.vcf_output_filename)
  return vcf_output_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_vcf_output_filename() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.vcf_output_filename)
  clear_has_vcf_output_filename();
  return vcf_output_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_vcf_output_filename(::std::string* vcf_output_filename) {
  if (vcf_output_filename != NULL) {
    set_has_vcf_output_filename();
  } else {
    clear_has_vcf_output_filename();
  }
  vcf_output_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vcf_output_filename);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.vcf_output_filename)
}

// optional string vcf_output_format = 9;
bool ExportConfiguration::has_vcf_output_format() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ExportConfiguration::set_has_vcf_output_format() {
  _has_bits_[0] |= 0x00000100u;
}
void ExportConfiguration::clear_has_vcf_output_format() {
  _has_bits_[0] &= ~0x00000100u;
}
void ExportConfiguration::clear_vcf_output_format() {
  vcf_output_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vcf_output_format();
}
 const ::std::string& ExportConfiguration::vcf_output_format() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.vcf_output_format)
  return vcf_output_format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_vcf_output_format(const ::std::string& value) {
  set_has_vcf_output_format();
  vcf_output_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.vcf_output_format)
}
 void ExportConfiguration::set_vcf_output_format(const char* value) {
  set_has_vcf_output_format();
  vcf_output_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.vcf_output_format)
}
 void ExportConfiguration::set_vcf_output_format(const char* value, size_t size) {
  set_has_vcf_output_format();
  vcf_output_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.vcf_output_format)
}
 ::std::string* ExportConfiguration::mutable_vcf_output_format() {
  set_has_vcf_output_format();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.vcf_output_format)
  return vcf_output_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_vcf_output_format() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.vcf_output_format)
  clear_has_vcf_output_format();
  return vcf_output_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_vcf_output_format(::std::string* vcf_output_format) {
  if (vcf_output_format != NULL) {
    set_has_vcf_output_format();
  } else {
    clear_has_vcf_output_format();
  }
  vcf_output_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vcf_output_format);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.vcf_output_format)
}

// optional string vid_mapping_file = 10;
bool ExportConfiguration::has_vid_mapping_file() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ExportConfiguration::set_has_vid_mapping_file() {
  _has_bits_[0] |= 0x00000200u;
}
void ExportConfiguration::clear_has_vid_mapping_file() {
  _has_bits_[0] &= ~0x00000200u;
}
void ExportConfiguration::clear_vid_mapping_file() {
  vid_mapping_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vid_mapping_file();
}
 const ::std::string& ExportConfiguration::vid_mapping_file() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.vid_mapping_file)
  return vid_mapping_file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_vid_mapping_file(const ::std::string& value) {
  set_has_vid_mapping_file();
  vid_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.vid_mapping_file)
}
 void ExportConfiguration::set_vid_mapping_file(const char* value) {
  set_has_vid_mapping_file();
  vid_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.vid_mapping_file)
}
 void ExportConfiguration::set_vid_mapping_file(const char* value, size_t size) {
  set_has_vid_mapping_file();
  vid_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.vid_mapping_file)
}
 ::std::string* ExportConfiguration::mutable_vid_mapping_file() {
  set_has_vid_mapping_file();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.vid_mapping_file)
  return vid_mapping_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_vid_mapping_file() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.vid_mapping_file)
  clear_has_vid_mapping_file();
  return vid_mapping_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_vid_mapping_file(::std::string* vid_mapping_file) {
  if (vid_mapping_file != NULL) {
    set_has_vid_mapping_file();
  } else {
    clear_has_vid_mapping_file();
  }
  vid_mapping_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vid_mapping_file);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.vid_mapping_file)
}

// optional string callset_mapping_file = 11;
bool ExportConfiguration::has_callset_mapping_file() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ExportConfiguration::set_has_callset_mapping_file() {
  _has_bits_[0] |= 0x00000400u;
}
void ExportConfiguration::clear_has_callset_mapping_file() {
  _has_bits_[0] &= ~0x00000400u;
}
void ExportConfiguration::clear_callset_mapping_file() {
  callset_mapping_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_callset_mapping_file();
}
 const ::std::string& ExportConfiguration::callset_mapping_file() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.callset_mapping_file)
  return callset_mapping_file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_callset_mapping_file(const ::std::string& value) {
  set_has_callset_mapping_file();
  callset_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ExportConfiguration.callset_mapping_file)
}
 void ExportConfiguration::set_callset_mapping_file(const char* value) {
  set_has_callset_mapping_file();
  callset_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ExportConfiguration.callset_mapping_file)
}
 void ExportConfiguration::set_callset_mapping_file(const char* value, size_t size) {
  set_has_callset_mapping_file();
  callset_mapping_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ExportConfiguration.callset_mapping_file)
}
 ::std::string* ExportConfiguration::mutable_callset_mapping_file() {
  set_has_callset_mapping_file();
  // @@protoc_insertion_point(field_mutable:ExportConfiguration.callset_mapping_file)
  return callset_mapping_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExportConfiguration::release_callset_mapping_file() {
  // @@protoc_insertion_point(field_release:ExportConfiguration.callset_mapping_file)
  clear_has_callset_mapping_file();
  return callset_mapping_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExportConfiguration::set_allocated_callset_mapping_file(::std::string* callset_mapping_file) {
  if (callset_mapping_file != NULL) {
    set_has_callset_mapping_file();
  } else {
    clear_has_callset_mapping_file();
  }
  callset_mapping_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callset_mapping_file);
  // @@protoc_insertion_point(field_set_allocated:ExportConfiguration.callset_mapping_file)
}

// optional uint32 max_diploid_alt_alleles_that_can_be_genotyped = 12;
bool ExportConfiguration::has_max_diploid_alt_alleles_that_can_be_genotyped() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ExportConfiguration::set_has_max_diploid_alt_alleles_that_can_be_genotyped() {
  _has_bits_[0] |= 0x00000800u;
}
void ExportConfiguration::clear_has_max_diploid_alt_alleles_that_can_be_genotyped() {
  _has_bits_[0] &= ~0x00000800u;
}
void ExportConfiguration::clear_max_diploid_alt_alleles_that_can_be_genotyped() {
  max_diploid_alt_alleles_that_can_be_genotyped_ = 0u;
  clear_has_max_diploid_alt_alleles_that_can_be_genotyped();
}
 ::google::protobuf::uint32 ExportConfiguration::max_diploid_alt_alleles_that_can_be_genotyped() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.max_diploid_alt_alleles_that_can_be_genotyped)
  return max_diploid_alt_alleles_that_can_be_genotyped_;
}
 void ExportConfiguration::set_max_diploid_alt_alleles_that_can_be_genotyped(::google::protobuf::uint32 value) {
  set_has_max_diploid_alt_alleles_that_can_be_genotyped();
  max_diploid_alt_alleles_that_can_be_genotyped_ = value;
  // @@protoc_insertion_point(field_set:ExportConfiguration.max_diploid_alt_alleles_that_can_be_genotyped)
}

// optional bool index_output_VCF = 13;
bool ExportConfiguration::has_index_output_vcf() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ExportConfiguration::set_has_index_output_vcf() {
  _has_bits_[0] |= 0x00001000u;
}
void ExportConfiguration::clear_has_index_output_vcf() {
  _has_bits_[0] &= ~0x00001000u;
}
void ExportConfiguration::clear_index_output_vcf() {
  index_output_vcf_ = false;
  clear_has_index_output_vcf();
}
 bool ExportConfiguration::index_output_vcf() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.index_output_VCF)
  return index_output_vcf_;
}
 void ExportConfiguration::set_index_output_vcf(bool value) {
  set_has_index_output_vcf();
  index_output_vcf_ = value;
  // @@protoc_insertion_point(field_set:ExportConfiguration.index_output_VCF)
}

// optional bool produce_GT_field = 14;
bool ExportConfiguration::has_produce_gt_field() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ExportConfiguration::set_has_produce_gt_field() {
  _has_bits_[0] |= 0x00002000u;
}
void ExportConfiguration::clear_has_produce_gt_field() {
  _has_bits_[0] &= ~0x00002000u;
}
void ExportConfiguration::clear_produce_gt_field() {
  produce_gt_field_ = false;
  clear_has_produce_gt_field();
}
 bool ExportConfiguration::produce_gt_field() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.produce_GT_field)
  return produce_gt_field_;
}
 void ExportConfiguration::set_produce_gt_field(bool value) {
  set_has_produce_gt_field();
  produce_gt_field_ = value;
  // @@protoc_insertion_point(field_set:ExportConfiguration.produce_GT_field)
}

// optional bool produce_FILTER_field = 15;
bool ExportConfiguration::has_produce_filter_field() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ExportConfiguration::set_has_produce_filter_field() {
  _has_bits_[0] |= 0x00004000u;
}
void ExportConfiguration::clear_has_produce_filter_field() {
  _has_bits_[0] &= ~0x00004000u;
}
void ExportConfiguration::clear_produce_filter_field() {
  produce_filter_field_ = false;
  clear_has_produce_filter_field();
}
 bool ExportConfiguration::produce_filter_field() const {
  // @@protoc_insertion_point(field_get:ExportConfiguration.produce_FILTER_field)
  return produce_filter_field_;
}
 void ExportConfiguration::set_produce_filter_field(bool value) {
  set_has_produce_filter_field();
  produce_filter_field_ = value;
  // @@protoc_insertion_point(field_set:ExportConfiguration.produce_FILTER_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
